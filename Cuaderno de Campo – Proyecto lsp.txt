üìì Cuaderno de Campo ‚Äì Proyecto lspy-traductor
Datos Generales

Nombre del Proyecto: lspy-traductor

Objetivo: Desarrollar un sistema de traducci√≥n de lengua de se√±as paraguaya (LSPy) utilizando visi√≥n por computadora y aprendizaje autom√°tico.

Herramientas principales: Python 3.11.3, OpenCV, MediaPipe, Scikit-learn, Joblib, Tkinter.

Repositorio: GitHub ‚Äì brianbritos/lspy-traductor

L√≠nea de Tiempo y Registro de Avances
10-11 de mayo de 2025 ‚Äì Inicio

Se define la idea de un traductor de se√±as paraguayas.

Alcance: se prioriza un prototipo funcional.

Enfoque pr√°ctico, descartando usos educativos o sanitarios.

12 de mayo ‚Äì Compatibilidad

Se prueba Python 3.14 ‚Üí errores con mediapipe.

Decisi√≥n: migrar a versi√≥n estable 3.11.3.

13 de mayo ‚Äì Preparaci√≥n del entorno

Instalaci√≥n de Python 3.11.3 y librer√≠as principales.

Se documenta la necesidad de un instalador ‚Üí m√°s tarde se crea requisitos.py.

14 de mayo ‚Äì Captura Est√°tica

Creaci√≥n de collect_data.py.

Se recolectan landmarks de la mano (21 puntos) en archivos .csv.

15-16 de mayo ‚Äì Captura Din√°mica

Desarrollo de collect_data_motion.py.

Se decide mantener scripts separados para datos est√°ticos y din√°micos.

17-18 de mayo ‚Äì Entrenamiento

Se entrena un Random Forest Classifier con scikit-learn.

Se genera y guarda modelo.pkl.

19 de mayo ‚Äì Reconocimiento en vivo

Se desarrolla recognizer.py con uso de c√°mara en tiempo real.

20-21 de mayo ‚Äì Automatizaci√≥n

Creaci√≥n de scripts .bat para facilitar instalaci√≥n/ejecuci√≥n.

Se posponen mejoras como filtros temporales y aumento de datos.

22-23 de mayo ‚Äì Documentaci√≥n

Se delimita el enfoque: contexto laboral como aplicaci√≥n principal.

Inicio de la redacci√≥n de planteamiento.

24-31 de mayo ‚Äì Integraci√≥n

Se desarrolla traductor.py:

Men√∫ central (captura est√°tica, din√°mica, entrenamiento, predicci√≥n).

Validaci√≥n de estabilidad de mano.

Organizaci√≥n de datasets en data/.

1-5 de junio ‚Äì Interfaz

Creaci√≥n de modelo_demostracion.py:

Interfaz gr√°fica con Tkinter.

Muestra video en vivo, predicci√≥n y texto acumulado.

Implementa umbral de confianza.

Registro de Versiones (GitHub)
Agosto 2025

09/08/2025

Unificado: integraci√≥n de scripts.

Alpha 0.1: primera versi√≥n estable.

Alpha 0.1.1 / 0.1.2: mejoras y correcciones.

Commits relacionados: 776f634, 2b7c7ab, 94fab51, 98ab8fd.

25/08/2025

Add files via upload (colaborador sisoykev).

Commit verificado: f98a752.

31/08/2025

Limpieza: eliminaci√≥n de .bat, src/, datasets de prueba y duplicados de modelos.

Alpha 0.1.3: √∫ltima versi√≥n alpha estable.

Beta 0.1: consolidaci√≥n del prototipo.

Beta 0.2: mejoras de robustez y estructura.

Commits verificados: 7d7cec7, ee46e2c, 3ed338a, eae2cba, 928c6e3, a91b79f, b170cb9, 0af837e, 2549f89, cd55a58, 0d591c2, eb45a41.

Estado Actual

Sistema completo con:

Captura de datos (est√°ticos y din√°micos).

Entrenamiento de modelos Random Forest.

Predicci√≥n en vivo (CLI y GUI).

Herramientas de soporte: instalador (requisitos.py), men√∫ (traductor.py), demo (modelo_demostracion.py).

Versiones beta ya publicadas en el repositorio.